#!/bin/zsh
. ./lib/ioScreen
. ./lib/system

: '
	Create a user on in the Empassion VPN

	Positional Arguments / Options:
		$1	--email		the email of the user receiving the certificate

'
case $1 in
--email=*)
  email=${1#--email=}
  ;;
*)
  unset email
  ioScreen.outError "Invalid email assigned to option: --email\n\t\tExample syntax(s):\n\t\t\t--email=lou.grossi@empassion.com\n\t\t\t--email=devops@empassion.com"
  ;;
esac

if [ ! -v ${email} ]; then
  securityProject="security-services-4f84"
  fileName=$(sed 's/[^0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-]/_/g' <<<"$email").ovpn
  # do not be on vpn notification
  printf "\n"
  ioScreen.outWarn "You should not be on the VPN for this operation"
  printf "\n\t\tCaveat: It seems like this should be something that you HAVE to be on the VPN for. \
    Why are you telling me I can't be?\n"
  printf "\n\t\tBasically, you are connecting to the VPN.  So it sees your public IP. \
    You are reassigned an IP when you come out of the VPN. That is the IP we use to whitelist. \
    In this particular case the VPN refuses to us it's own IP.  This can likely be solved by using the \
    private IP if the VPN instance to ssh in.  We could also probably do some trickery with NAT gateways, but \
    overall adding a temp security exception and them removing it seems sufficient for now.  This VPN is \
    a temporary stop over to a more robust solution - so bear with us.\n \
    \t\t\t4/16/2023 (date stamped for a good laugh in 3 years when you're still reading this!)\n"
  printf "\t\tDisconnect from VPN and then press [ ANY KEY ] to continue"
  read paktc
  printf "\n"

  # create a temporary firewall rule to grant ssh access
  gcloud compute firewall-rules create cli-temp-allow-ssh --allow=tcp:22 --network="security-services-vpc" --source-ranges="$(curl ifconfig.me)" --target-tags="vpn" --description="Temp rule created by CLI" --project=${securityProject} --quiet --verbosity=error
  # transfer addUser.sh to /tmp
  gcloud compute scp --project=${securityProject} --zone=us-central1-a --ssh-key-expire-after=1m ./scripts.d/vpn/addUser.sh vpn:~/addUser.sh --verbosity=error >/dev/null
  # create certificate
  gcloud compute ssh vpn --zone us-central1-a --project=${securityProject} --command="sudo mv ~/addUser.sh /tmp/ && sudo chmod +x /tmp/addUser.sh && sudo /tmp/addUser.sh ${email} && sudo rm /tmp/addUser.sh" --verbosity=error --no-user-output-enabled
  # download the certificate
  gcloud compute scp --project=${securityProject} --zone=us-central1-a --ssh-key-expire-after=2m vpn:/tmp/${fileName} ~/Desktop/ --verbosity=error >/dev/null
  # delete temporary firewall rule
  gcloud compute firewall-rules delete cli-temp-allow-ssh --project=${securityProject} --quiet --verbosity=error >/dev/null
fi
